pipeline 
{
	agent 
	{
		kubernetes
		{
yaml '''
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: aws
    image: amazon/aws-cli:latest
    securityContext:
      runAsUser: 0
      privileged: true
    command:
    - cat
    tty: true
  - name: helm
    image: alpine/helm:3.12.3
    command:
    - cat
    tty: true

''' // Agent pod with two containers: Buildkit for build + publish, Helm for deploy.
		}
	}

	environment
	{
		AWS_REGION = 'eu-central-1'
		ECR_URI = "122610493328.dkr.ecr.${AWS_REGION}.amazonaws.com"
		IMAGE_NAME = 'weatherapp'
		ECR_REPO = "${ECR_URI}/${IMAGE_NAME}"
	}

	stages
	{
		stage('Build and Publish')
		{
			steps
			{
				container('aws')
				{
					sh """
						yum update -y
						amazon-linux-extras install docker
					    aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_URI}
            			docker build -t ${ECR_REPO} .
            			docker push ${ECR_REPO}
            		"""
				}
			}
		}

		stage('Deploy')
		{
			steps
			{
				container('helm')
				{
					sh "helm upgrade --install weather-app ./Question1/HelmCharts/WeatherAppChart --namespace app"
				}
			}
		}
	}
}