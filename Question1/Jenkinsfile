pipeline 
{
	agent 
	{
		kubernetes
		{
yaml '''
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: buildkit
    image: moby/buildkit:master
    securityContext:
      privileged: true
    tty: true
  - name: helm
    image: alpine/helm:3.12.3
    command:
    - cat
    tty: true

''' // Agent pod with two containers: Buildkit for build + publish, Helm for deploy.
		}
	}

	environment
	{
		AWS_REGION = 'eu-central-1'
		ECR_REPO = "122610493328.dkr.ecr.${AWS_REGION}.amazonaws.com/weatherapp"
	}

	stages
	{
		stage('Build and Publish')
		{
			steps
			{
				container('buildkit')
				{
					sh """
            			buildctl build --frontend dockerfile.v0 --local context=./Question1/WeatherApp/ --local dockerfile=./Question1/WeatherApp/ --output type=image,name=${ECR_REPO}:latest,push=true
            		"""
				}
			}
		}

		stage('Deploy')
		{
			steps
			{
				container('helm')
				{
					sh "helm upgrade --install weather-app ./Question1/HelmCharts/WeatherAppChart --namespace app"
				}
			}
		}
	}
}