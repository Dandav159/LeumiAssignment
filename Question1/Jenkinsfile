pipeline 
{
	agent 
	{
		kubernetes
		{
yaml '''
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: docker
    image: docker:dind
    securityContext:
      privileged: true
    env:
    - name: DOCKER_TLS_CERTDIR
      value: ""
    volumeMounts:
    - name: docker-socket
      mountPath: /var/lib/docker
  - name: helm
    image: alpine/helm:3.12.3
    command:
    - cat
    tty: true
  volumes:
  - name: docker-socket
    emptyDir: {}

''' // Agent pod with two containers: Docker for build + publish, Helm for deploy. (DnD)
		}
	}

	environment
	{
		AWS_REGION = 'eu-central-1'
		ECR_REPO = "122610493328.dkr.ecr.${AWS_REGION}.amazonaws.com/weatherapp"
		DOCKER_HOST = 'tcp://localhost:2375'
	}

	stages
	{
		stage('Build and Publish')
		{
			steps
			{
				container('docker')
				{
					sh """
                        #aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REPO}
                        dockerd &
                        sleep 5
                        docker build -t ${ECR_REPO}:latest .
                        docker push ${ECR_REPO}:latest
            		"""
				}
			}
		}

		stage('Deploy')
		{
			steps
			{
				container('helm')
				{
					sh "helm upgrade --install weather-app ./Question1/HelmCharts/WeatherAppChart --namespace app"
				}
			}
		}
	}
}